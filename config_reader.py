"""Reads the required data from the yaml configuration file in path"""

from pathlib import Path as path
import yaml

######## example ##########
class settings_experimental_class():

    def __init__(self) -> None:
        self.urls = self.get_urls
        pass

    def get_urls(self: dict) -> dict:
        """Gets all URLs settings dictionary generated by load_settings()"""

        return settings["url"]


    pass

######## END ##########

def load_settings(config_file_path: path = path("personal_config.yml")) -> dict:
    """Gets the login information from the configuration file provided as a pathlib object"""

    with open(config_file_path) as config_file:
        settings = yaml.safe_load(config_file)

    return settings

def get_login_info(settings: dict) -> dict:
    """Gets the login information from settings dictionary generated by load_settings()"""

    return settings["login_info"]

def get_urls(settings: dict) -> dict:
    """Gets all URLs settings dictionary generated by load_settings()"""

    return settings["url"]

def requires_completion(link_name: str, urls: dict) -> bool:

    """Checks if the configuration string requires a completion
    from the completion section of the configuration file."""

    return not urls[f"{link_name}"]["complete"]

def get_url_completion_values(settings: dict) -> dict:
    """Gets all URLs completion values dictionary generated by load_settings()"""

    return settings["url_completion_values"]

def complete_url(settings: dict, url_name: dict) -> str:
    completions = settings["url_completion_values"]
    required_key = url_name["link"].split('{')[1].split('}')[0]
    
    # completed = f'{completions[f'{required_key}']}'


    return


settings = load_settings()

if __name__ == "__main__":
    settings = load_settings()
    urls = get_urls(settings)

    completions = settings["url_completion_values"]
    required_key = urls["player_detailed_data_endpoint_path"]["link"].split('{')[1].split('}')[0]
    print(f'{urls["player_detailed_data_endpoint_path"]["link"]}')
    
    # completed = f'{}'